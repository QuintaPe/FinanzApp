---
export interface Props {
  variant?: 'primary' | 'outline' | 'danger';
  size?: 'small' | 'medium' | 'large';
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  class?: string;
}

const { 
  variant = 'primary', 
  size = 'medium', 
  type = 'button',
  disabled = false,
  class: className = '',
  ...props
} = Astro.props;
---

<button 
  {...props}
  type={type}
  class={`btn btn-${variant} btn-${size} ${className}`}
  disabled={disabled}
>
  <slot />
</button>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    border: none;
    border-radius: 8px;
    font-family: inherit;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s ease;
    text-decoration: none;
    white-space: nowrap;
  }

  .btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .btn:not(:disabled):hover {
    transform: translateY(-1px);
  }

  /* Variants */
  .btn-primary {
    background: var(--color-success);
    color: var(--color-text-primary);
  }

  .btn-primary:hover {
    background: var(--color-success-dark);
    box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
  }

  .btn-outline {
    background: transparent;
    color: var(--color-text-secondary);
    border: 1px solid var(--color-border-secondary);
  }

  .btn-outline:hover {
    background: var(--color-bg-secondary);
    border-color: #666;
    color: var(--color-text-primary);
  }

  .btn-danger {
    background: var(--color-error);
    color: var(--color-text-primary);
  }

  .btn-danger:hover {
    background: var(--color-error-dark);
    box-shadow: 0 4px 12px rgba(244, 67, 54, 0.3);
  }

  /* Sizes */
  .btn-small {
    padding: 8px 16px;
    font-size: 12px;
    min-height: 32px;
  }

  .btn-medium {
    padding: 12px 20px;
    font-size: 14px;
    min-height: 40px;
  }

  .btn-large {
    padding: 16px 24px;
    font-size: 16px;
    min-height: 48px;
  }
</style> 