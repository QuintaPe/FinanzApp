---
export interface Props {
  headers: string[];
  class?: string;
}

const { headers, class: className = '' } = Astro.props;
---

<div class={`table-container ${className}`}>
  <table class="table">
    <thead>
      <tr>
        {headers.map(header => (
          <th>{header}</th>
        ))}
      </tr>
    </thead>
    <tbody>
      <slot />
    </tbody>
  </table>
</div>

<style>
  .table-container {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }

  .table {
    width: 100%;
    border-collapse: collapse;
    font-size: 14px;
    min-width: 600px;
  }

  .table th {
    background: #1A1A1A;
    color: #cccccc;
    font-weight: 600;
    text-align: left;
    padding: 16px 12px;
    border-bottom: 1px solid #333;
    font-size: 12px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    white-space: nowrap;
  }

  .table td {
    padding: 16px 12px;
    border-bottom: 1px solid #333;
    color: #ffffff;
    vertical-align: middle;
  }

  .table tbody tr {
    transition: background-color 0.2s ease;
  }

  .table tbody tr:hover {
    background: #2C2C2C;
  }

  .table tbody tr:last-child td {
    border-bottom: none;
  }

  /* Mobile Styles */
  @media (max-width: 768px) {
    .table {
      font-size: 13px;
      min-width: 500px;
    }

    .table th,
    .table td {
      padding: 12px 8px;
    }

    .table th {
      font-size: 11px;
    }
  }

  @media (max-width: 480px) {
    .table {
      font-size: 12px;
      min-width: 400px;
    }

    .table th,
    .table td {
      padding: 8px 6px;
    }

    .table th {
      font-size: 10px;
    }
  }

  /* Touch-friendly improvements */
  @media (hover: none) and (pointer: coarse) {
    .table tbody tr:hover {
      background: transparent;
    }
  }
</style> 